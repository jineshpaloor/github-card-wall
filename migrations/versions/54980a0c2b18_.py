"""empty message

Revision ID: 54980a0c2b18
Revises: None
Create Date: 2015-09-22 10:03:56.241680

"""

# revision identifiers, used by Alembic.
revision = '54980a0c2b18'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('issue_labels')
    op.drop_table('user_projects')
    op.drop_table('users')
    op.drop_table('issues')
    op.drop_table('labels')
    op.drop_table('projects')
    op.drop_table('repositories')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repositories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('repositories_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('github_repo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], [u'projects.id'], name=u'repositories_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'repositories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('projects_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'users.id'], name=u'projects_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('labels',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('labels_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], [u'projects.id'], name=u'labels_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'labels_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('issues',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('issues_id_seq'::regclass)"), nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('repository_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['repository_id'], [u'repositories.id'], name=u'issues_repository_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'issues_pkey'),
    sa.UniqueConstraint('number', 'repository_id', name=u'issues_number_repository_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('users_id_seq'::regclass)"), nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('github_access_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_projects',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], [u'projects.id'], name=u'user_projects_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'user_projects_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'project_id', name=u'user_projects_pkey')
    )
    op.create_table('issue_labels',
    sa.Column('issue_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('label_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], [u'issues.id'], name=u'issue_labels_issue_id_fkey'),
    sa.ForeignKeyConstraint(['label_id'], [u'labels.id'], name=u'issue_labels_label_id_fkey'),
    sa.PrimaryKeyConstraint('issue_id', 'label_id', name=u'issue_labels_pkey')
    )
    ### end Alembic commands ###
